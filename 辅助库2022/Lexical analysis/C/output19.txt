VOIDTK void
IDENFR compare
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "a=%d, b=%d\n"
COMMA ,
IDENFR x
COMMA ,
IDENFR y
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR x
GRE >
IDENFR y
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "a>b\n"
RPARENT )
SEMICN ;
ELSETK else
PRINTFTK printf
LPARENT (
STRCON "a<=b\n"
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR test
LPARENT (
INTTK int
IDENFR x
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR x
LSS <
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "input = %d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
ELSETK else
PRINTFTK printf
LPARENT (
STRCON "Illegal input\n"
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR printI
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
INTTK int
IDENFR i
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR n
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "cur i=%d\n"
COMMA ,
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR i
EQL ==
IDENFR n
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
RBRACE }
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
ASSIGN =
INTCON 4
COMMA ,
IDENFR b
ASSIGN =
INTCON 7
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373472\n"
RPARENT )
SEMICN ;
IDENFR compare
LPARENT (
IDENFR a
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
IDENFR printI
LPARENT (
INTCON 2
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
PLUS +
IDENFR b
GRE >
INTCON 10
RPARENT )
IDENFR test
LPARENT (
IDENFR a
MINU -
IDENFR b
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
