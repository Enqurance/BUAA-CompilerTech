INTTK int
IDENFR global_var1
ASSIGN =
INTCON 9
SEMICN ;
INTTK int
IDENFR global_var2
COMMA ,
IDENFR global_var3
ASSIGN =
INTCON 10
SEMICN ;
CONSTTK const
INTTK int
IDENFR con1
ASSIGN =
INTCON 44
SEMICN ;
CONSTTK const
INTTK int
IDENFR con2
ASSIGN =
INTCON 56
MULT *
INTCON 12
PLUS +
INTCON 6
COMMA ,
IDENFR con4
ASSIGN =
INTCON 888
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR con3
ASSIGN =
IDENFR con1
PLUS +
IDENFR con2
DIV /
INTCON 39
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "(20373335)\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "C level,test a code has decl,no func\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "con1 is %d\n"
COMMA ,
IDENFR con1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "con2 is %d,con3 is %d\n"
COMMA ,
IDENFR con2
COMMA ,
IDENFR con3
RPARENT )
SEMICN ;
INTTK int
IDENFR var1
COMMA ,
IDENFR var2
ASSIGN =
IDENFR con3
SEMICN ;
INTTK int
IDENFR var3
SEMICN ;
IDENFR var3
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
LBRACE {
SEMICN ;
RBRACE }
LBRACE {
LBRACE {
RBRACE }
RBRACE }
IDENFR var1
ASSIGN =
IDENFR var2
MINU -
IDENFR var3
MULT *
IDENFR var2
PLUS +
LPARENT (
IDENFR con2
MULT *
IDENFR var3
RPARENT )
MOD %
LPARENT (
IDENFR con1
PLUS +
IDENFR con3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "the left val is %d\n"
COMMA ,
IDENFR var1
RPARENT )
SEMICN ;
IDENFR var2
MINU -
IDENFR var3
MULT *
IDENFR var2
PLUS +
LPARENT (
IDENFR con2
MULT *
IDENFR var3
RPARENT )
MOD %
LPARENT (
IDENFR con1
PLUS +
IDENFR con3
RPARENT )
SEMICN ;
INTTK int
IDENFR var5
ASSIGN =
MINU -
PLUS +
MINU -
PLUS +
MINU -
IDENFR con1
SEMICN ;
IFTK if
LPARENT (
IDENFR var1
GRE >
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "var1 greater than 1\n"
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR con3
GEQ >=
INTCON 0
RPARENT )
LBRACE {
IDENFR var3
ASSIGN =
IDENFR var1
DIV /
IDENFR con1
PLUS +
IDENFR var2
MULT *
INTCON 1225
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IFTK if
LPARENT (
IDENFR var2
LSS <
IDENFR con4
RPARENT )
LBRACE {
IDENFR var2
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
IFTK if
LPARENT (
IDENFR var5
LEQ <=
IDENFR con4
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR var5
EQL ==
IDENFR con1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "var5 equal to con1\n"
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 23
NEQ !=
INTCON 22
PLUS +
INTCON 1
MINU -
INTCON 7
MULT *
INTCON 55
MOD %
INTCON 9
PLUS +
INTCON 7
DIV /
INTCON 2
LEQ <=
INTCON 24
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
RBRACE }
WHILETK while
LPARENT (
INTCON 1
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 56
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
IDENFR j
LEQ <=
IDENFR i
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
INTTK int
IDENFR k
SEMICN ;
CONTINUETK continue
SEMICN ;
RBRACE }
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
