INTTK int
IDENFR cnt
ASSIGN =
INTCON 10
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
MINU -
PLUS +
MINU -
PLUS +
MINU -
PLUS +
MINU -
PLUS +
MINU -
LPARENT (
INTCON 2
PLUS +
LPARENT (
INTCON 4
PLUS +
INTCON 5
RPARENT )
MULT *
INTCON 7
RPARENT )
SEMICN ;
INTTK int
IDENFR begin
COMMA ,
IDENFR end
SEMICN ;
IDENFR begin
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR end
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR begin
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373935"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR end
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
LEQ <=
IDENFR begin
PLUS +
LPARENT (
IDENFR end
MINU -
IDENFR begin
RPARENT )
DIV /
INTCON 3
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
MOD %
INTCON 4
EQL ==
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Ha\n"
RPARENT )
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
MINU -
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR i
LSS <
IDENFR begin
PLUS +
LPARENT (
IDENFR end
MINU -
IDENFR begin
RPARENT )
DIV /
INTCON 2
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
MOD %
INTCON 6
EQL ==
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Fa\n"
RPARENT )
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
MINU -
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR i
GEQ >=
IDENFR begin
PLUS +
LPARENT (
IDENFR end
MINU -
IDENFR begin
RPARENT )
MULT *
INTCON 3
DIV /
INTCON 4
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
MOD %
INTCON 8
EQL ==
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Pa\n"
RPARENT )
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
MINU -
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR i
GRE >
IDENFR begin
PLUS +
LPARENT (
IDENFR end
MINU -
IDENFR begin
RPARENT )
MULT *
INTCON 5
DIV /
INTCON 6
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
MOD %
INTCON 10
EQL ==
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Ja\n"
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
