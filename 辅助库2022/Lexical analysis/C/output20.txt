CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 100
SEMICN ;
CONSTTK const
INTTK int
IDENFR b
ASSIGN =
INTCON 10
COMMA ,
IDENFR c
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
INTTK int
IDENFR x
ASSIGN =
INTCON 1
COMMA ,
IDENFR y
ASSIGN =
INTCON 2
COMMA ,
IDENFR z
ASSIGN =
INTCON 3
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
NEQ !=
INTCON 99
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR c
LEQ <=
INTCON 10
AND &&
IDENFR b
GEQ >=
INTCON 10
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
GRE >
INTCON 99
OR ||
IDENFR b
LSS <
INTCON 20
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR i
SEMICN ;
IDENFR i
ASSIGN =
MINU -
INTCON 5
SEMICN ;
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 0
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
EQL ==
MINU -
INTCON 1
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
CONTINUETK continue
SEMICN ;
RBRACE }
BREAKTK break
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
MINU -
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "i=%d\n"
COMMA ,
IDENFR i
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373480\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373480"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
