CONSTTK const
INTTK int
IDENFR op
ASSIGN =
INTCON 5
SEMICN ;
INTTK int
IDENFR max
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
RPARENT )
LBRACE {
INTTK int
IDENFR max
ASSIGN =
IDENFR a
SEMICN ;
IFTK if
LPARENT (
IDENFR b
GRE >
IDENFR max
RPARENT )
LBRACE {
IDENFR max
ASSIGN =
IDENFR b
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR c
GRE >
IDENFR max
RPARENT )
LBRACE {
IDENFR max
ASSIGN =
IDENFR c
SEMICN ;
RBRACE }
RETURNTK return
IDENFR max
SEMICN ;
RBRACE }
INTTK int
IDENFR maxx
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
INTTK int
IDENFR max
ASSIGN =
IDENFR a
SEMICN ;
IFTK if
LPARENT (
IDENFR b
GRE >
IDENFR max
RPARENT )
LBRACE {
IDENFR max
ASSIGN =
IDENFR b
SEMICN ;
RBRACE }
RETURNTK return
IDENFR max
SEMICN ;
RBRACE }
VOIDTK void
IDENFR mxx
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
COMMA ,
INTTK int
IDENFR d
LBRACK [
RBRACK ]
LBRACK [
INTCON 5
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR max
ASSIGN =
IDENFR a
SEMICN ;
IFTK if
LPARENT (
IDENFR b
GRE >
IDENFR max
RPARENT )
LBRACE {
IDENFR max
ASSIGN =
IDENFR b
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR c
GRE >
IDENFR max
RPARENT )
LBRACE {
IDENFR max
ASSIGN =
IDENFR c
SEMICN ;
RBRACE }
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR fix
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
VOIDTK void
IDENFR fixx
LPARENT (
RPARENT )
LBRACE {
RBRACE }
INTTK int
IDENFR minArr
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR temp
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 5
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR j
LSS <
INTCON 4
MINU -
IDENFR i
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
LBRACK [
IDENFR j
RBRACK ]
GRE >
IDENFR a
LBRACK [
IDENFR j
PLUS +
INTCON 1
RBRACK ]
RPARENT )
LBRACE {
IDENFR temp
ASSIGN =
IDENFR a
LBRACK [
IDENFR j
RBRACK ]
SEMICN ;
IDENFR a
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR a
LBRACK [
IDENFR j
PLUS +
INTCON 1
RBRACK ]
SEMICN ;
IDENFR a
LBRACK [
IDENFR j
PLUS +
INTCON 1
RBRACK ]
ASSIGN =
IDENFR temp
SEMICN ;
RBRACE }
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR b
ASSIGN =
INTCON 4
COMMA ,
IDENFR a
ASSIGN =
INTCON 5
COMMA ,
IDENFR c
ASSIGN =
INTCON 6
SEMICN ;
CONSTTK const
INTTK int
IDENFR uu
ASSIGN =
INTCON 8
COMMA ,
IDENFR ui
ASSIGN =
INTCON 9
SEMICN ;
CONSTTK const
INTTK int
IDENFR e
ASSIGN =
INTCON 3
SEMICN ;
CONSTTK const
INTTK int
IDENFR f
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
RBRACE }
SEMICN ;
CONSTTK const
INTTK int
IDENFR g
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 1
RBRACE }
COMMA ,
LBRACE {
INTCON 2
COMMA ,
INTCON 2
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR k
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
LBRACE {
INTCON 8
COMMA ,
INTCON 7
COMMA ,
INTCON 6
COMMA ,
INTCON 5
COMMA ,
INTCON 4
RBRACE }
SEMICN ;
INTTK int
IDENFR h
SEMICN ;
INTTK int
IDENFR r
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
INTTK int
IDENFR s
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
INTTK int
IDENFR l
ASSIGN =
INTCON 9
COMMA ,
IDENFR m
ASSIGN =
INTCON 10
SEMICN ;
INTTK int
IDENFR n
ASSIGN =
INTCON 11
SEMICN ;
INTTK int
IDENFR ouo
ASSIGN =
INTCON 1
COMMA ,
IDENFR sui
ASSIGN =
INTCON 9
COMMA ,
IDENFR siu
ASSIGN =
INTCON 19
SEMICN ;
INTTK int
IDENFR o
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 1
RBRACE }
COMMA ,
LBRACE {
INTCON 2
COMMA ,
INTCON 2
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR p
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
RBRACE }
SEMICN ;
IDENFR h
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
IDENFR max
LPARENT (
INTCON 3
COMMA ,
INTCON 4
COMMA ,
INTCON 5
RPARENT )
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
IDENFR minArr
LPARENT (
IDENFR k
RPARENT )
SEMICN ;
INTTK int
IDENFR io
ASSIGN =
IDENFR maxx
LPARENT (
INTCON 3
COMMA ,
INTCON 4
RPARENT )
SEMICN ;
INTTK int
IDENFR t
ASSIGN =
MINU -
INTCON 1
SEMICN ;
IDENFR o
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
INTCON 7
SEMICN ;
IDENFR p
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
INTCON 9
SEMICN ;
IDENFR p
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR o
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR o
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
INTCON 99
SEMICN ;
IFTK if
LPARENT (
IDENFR o
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
EQL ==
INTCON 99
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR o
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
EQL ==
INTCON 98
RPARENT )
LBRACE {
INTCON 3
SEMICN ;
RBRACE }
IFTK if
LPARENT (
LPARENT (
IDENFR b
PLUS +
INTCON 4
RPARENT )
GEQ >=
LPARENT (
IDENFR h
MINU -
INTCON 4
RPARENT )
AND &&
IDENFR h
MULT *
INTCON 4
LEQ <=
IDENFR a
MULT *
INTCON 60
AND &&
IDENFR h
GRE >
INTCON 5
OR ||
IDENFR h
DIV /
INTCON 4
LSS <
INTCON 3
OR ||
IDENFR h
MOD %
INTCON 3
EQL ==
INTCON 1
OR ||
IDENFR h
MINU -
INTCON 1
NEQ !=
INTCON 8
OR ||
IDENFR h
LSS <
IDENFR max
LPARENT (
INTCON 40
COMMA ,
INTCON 50
COMMA ,
IDENFR o
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
OR ||
NOT !
IDENFR t
OR ||
MINU -
IDENFR t
OR ||
PLUS +
IDENFR t
OR ||
IDENFR fix
LPARENT (
RPARENT )
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 6
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 2
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 3
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
CONTINUETK continue
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR h
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20231077\n"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
