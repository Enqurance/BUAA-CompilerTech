CONSTTK const
INTTK int
IDENFR a0
ASSIGN =
INTCON 0
SEMICN ;
VOIDTK void
IDENFR f
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
IDENFR ff
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
RPARENT )
LBRACE {
IDENFR c
ASSIGN =
IDENFR c
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR fd
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
SEMICN ;
RBRACE }
INTTK int
IDENFR fk
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR c
LBRACK [
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "21371064"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "heihei%d\n"
COMMA ,
IDENFR a0
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
INTCON 8
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "AC\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "WA\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "TLE\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "RE\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "PE\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "AK!!\n"
RPARENT )
SEMICN ;
INTTK int
IDENFR a1
ASSIGN =
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR a0
LSS <
IDENFR a1
RPARENT )
IDENFR a1
ASSIGN =
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR a0
GRE >
IDENFR a1
RPARENT )
IDENFR a1
ASSIGN =
INTCON 1
SEMICN ;
ELSETK else
IDENFR a1
ASSIGN =
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR a0
EQL ==
IDENFR a1
RPARENT )
IDENFR a1
ASSIGN =
INTCON 3
MULT *
INTCON 4
SEMICN ;
IFTK if
LPARENT (
NOT !
IDENFR a1
RPARENT )
IDENFR a1
ASSIGN =
INTCON 3
MINU -
INTCON 4
PLUS +
INTCON 5
SEMICN ;
IFTK if
LPARENT (
IDENFR a0
GEQ >=
IDENFR a1
RPARENT )
IDENFR a1
ASSIGN =
INTCON 9
SEMICN ;
IFTK if
LPARENT (
IDENFR a0
LEQ <=
IDENFR a1
RPARENT )
IDENFR a1
ASSIGN =
INTCON 10
SEMICN ;
WHILETK while
LPARENT (
IDENFR a0
GEQ >=
IDENFR a1
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a1
EQL ==
INTCON 4
RPARENT )
IDENFR a1
ASSIGN =
INTCON 5
SEMICN ;
BREAKTK break
SEMICN ;
CONTINUETK continue
SEMICN ;
RBRACE }
IDENFR a1
ASSIGN =
INTCON 3
DIV /
INTCON 5
SEMICN ;
IDENFR a1
ASSIGN =
IDENFR a1
MOD %
INTCON 6
SEMICN ;
IDENFR a1
ASSIGN =
INTCON 2
SEMICN ;
IFTK if
LPARENT (
IDENFR a1
EQL ==
INTCON 2
RPARENT )
LBRACE {
IDENFR a1
ASSIGN =
INTCON 3
SEMICN ;
IDENFR a1
ASSIGN =
INTCON 4
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR a1
EQL ==
INTCON 4
RPARENT )
LBRACE {
IDENFR a1
ASSIGN =
IDENFR a1
PLUS +
INTCON 1
SEMICN ;
CONTINUETK continue
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a1
EQL ==
INTCON 5
AND &&
IDENFR a1
EQL ==
INTCON 4
RPARENT )
IDENFR a1
ASSIGN =
INTCON 6
SEMICN ;
IFTK if
LPARENT (
IDENFR a1
NEQ !=
INTCON 6
OR ||
IDENFR a1
EQL ==
INTCON 3
RPARENT )
IDENFR a1
ASSIGN =
IDENFR a0
SEMICN ;
INTTK int
IDENFR a2
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR a3
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
SEMICN ;
INTTK int
IDENFR a4
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 3
COMMA ,
INTCON 4
RBRACE }
RBRACE }
COMMA ,
IDENFR a5
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RBRACE }
SEMICN ;
INTTK int
IDENFR a6
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR C
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 4
PLUS +
INTCON 2
DIV /
INTCON 4
MULT *
INTCON 2
MOD %
INTCON 6
MINU -
INTCON 5
COMMA ,
INTCON 9
RBRACE }
SEMICN ;
IDENFR C
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR fd
LPARENT (
IDENFR a1
RPARENT )
SEMICN ;
IDENFR C
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR fk
LPARENT (
IDENFR C
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR a2
COMMA ,
IDENFR a4
RPARENT )
SEMICN ;
INTTK int
IDENFR n
ASSIGN =
INTCON 4
SEMICN ;
IDENFR n
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR f
LPARENT (
RPARENT )
SEMICN ;
IDENFR ff
LPARENT (
IDENFR C
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR a4
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR a6
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
IDENFR n
ASSIGN =
IDENFR fd
LPARENT (
INTCON 3
PLUS +
IDENFR a0
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
