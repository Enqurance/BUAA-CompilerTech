INTTK int
IDENFR max
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR len
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR result
ASSIGN =
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR len
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
LSS <
IDENFR result
RPARENT )
IDENFR result
ASSIGN =
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
IDENFR result
SEMICN ;
RBRACE }
VOIDTK void
IDENFR dummy
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "21210109\n"
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 1
PLUS +
INTCON 1
RBRACE }
COMMA ,
IDENFR b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 1
PLUS +
INTCON 1
RBRACE }
COMMA ,
LBRACE {
INTCON 1
PLUS +
INTCON 2
COMMA ,
INTCON 4
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR c
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 1
PLUS +
INTCON 1
RBRACE }
COMMA ,
IDENFR d
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 1
PLUS +
INTCON 1
RBRACE }
COMMA ,
LBRACE {
INTCON 1
PLUS +
INTCON 2
COMMA ,
INTCON 4
RBRACE }
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d, %d\n"
COMMA ,
IDENFR max
LPARENT (
IDENFR c
COMMA ,
INTCON 2
RPARENT )
COMMA ,
IDENFR max
LPARENT (
IDENFR d
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
INTCON 2
RPARENT )
RPARENT )
SEMICN ;
IDENFR dummy
LPARENT (
IDENFR d
RPARENT )
SEMICN ;
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
INTCON 100
SEMICN ;
IDENFR d
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
INTCON 1000
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d, %d\n"
COMMA ,
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR d
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
