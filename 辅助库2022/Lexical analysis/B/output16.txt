VOIDTK void
IDENFR fun1
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR fun2
LPARENT (
INTTK int
IDENFR x
RPARENT )
LBRACE {
INTTK int
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
RETURNTK return
INTCON 114514
SEMICN ;
RBRACE }
VOIDTK void
IDENFR fun3
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR b
LBRACK [
RBRACK ]
LBRACK [
INTCON 4
RBRACK ]
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
INTCON 20373370
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR arr1
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 4
COMMA ,
INTCON 5
COMMA ,
INTCON 6
RBRACE }
COMMA ,
LBRACE {
INTCON 7
COMMA ,
INTCON 8
COMMA ,
INTCON 9
RBRACE }
RBRACE }
COMMA ,
IDENFR a1
ASSIGN =
INTCON 114
COMMA ,
IDENFR a2
ASSIGN =
INTCON 514
SEMICN ;
INTTK int
IDENFR c
ASSIGN =
INTCON 2
SEMICN ;
INTTK int
IDENFR arr2
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
COMMA ,
INTCON 4
RBRACE }
COMMA ,
LBRACE {
INTCON 5
COMMA ,
INTCON 6
COMMA ,
INTCON 7
COMMA ,
INTCON 8
RBRACE }
RBRACE }
COMMA ,
IDENFR arr3
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
IDENFR b
ASSIGN =
INTCON 4
SEMICN ;
INTTK int
IDENFR e
SEMICN ;
IDENFR e
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun1
LPARENT (
RPARENT )
SEMICN ;
IDENFR e
ASSIGN =
IDENFR fun2
LPARENT (
IDENFR e
RPARENT )
SEMICN ;
IDENFR fun3
LPARENT (
IDENFR arr2
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR arr2
RPARENT )
SEMICN ;
IDENFR e
ASSIGN =
INTCON 1
MOD %
INTCON 2
PLUS +
INTCON 4
DIV /
INTCON 3
SEMICN ;
IFTK if
LPARENT (
NOT !
INTCON 0
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a1
PLUS +
IDENFR a2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR b
MULT *
IDENFR c
PLUS +
INTCON 9
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR b
MINU -
IDENFR c
PLUS +
IDENFR c
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR arr3
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR arr2
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR arr2
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
INTCON 0
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
