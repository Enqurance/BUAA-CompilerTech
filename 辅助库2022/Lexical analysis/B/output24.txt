CONSTTK const
INTTK int
IDENFR globalA
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 20
COMMA ,
INTCON 373
RBRACE }
SEMICN ;
INTTK int
IDENFR globalVa
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
INTTK int
IDENFR globalVb
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 3
COMMA ,
INTCON 737
RBRACE }
SEMICN ;
INTTK int
IDENFR findElement
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR index
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
LBRACK [
IDENFR index
RBRACK ]
NEQ !=
INTCON 0
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
LBRACK [
IDENFR index
RBRACK ]
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
INTTK int
IDENFR writeElement
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR index
COMMA ,
INTTK int
IDENFR num
RPARENT )
LBRACE {
IDENFR a
LBRACK [
IDENFR index
RBRACK ]
ASSIGN =
IDENFR num
SEMICN ;
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
IDENFR f
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR x
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR x
LSS <
INTCON 3
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
IDENFR t
ASSIGN =
IDENFR findElement
LPARENT (
IDENFR a
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR t
NEQ !=
INTCON 0
RPARENT )
LBRACE {
RETURNTK return
IDENFR t
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR writeElement
LPARENT (
IDENFR a
COMMA ,
IDENFR x
MINU -
INTCON 1
COMMA ,
IDENFR f
LPARENT (
IDENFR a
COMMA ,
IDENFR x
MINU -
INTCON 1
RPARENT )
RPARENT )
SEMICN ;
IDENFR writeElement
LPARENT (
IDENFR a
COMMA ,
IDENFR x
MINU -
INTCON 2
COMMA ,
IDENFR f
LPARENT (
IDENFR a
COMMA ,
IDENFR x
MINU -
INTCON 2
RPARENT )
RPARENT )
SEMICN ;
RETURNTK return
IDENFR f
LPARENT (
IDENFR a
COMMA ,
IDENFR x
MINU -
INTCON 1
RPARENT )
PLUS +
IDENFR f
LPARENT (
IDENFR a
COMMA ,
IDENFR x
MINU -
INTCON 2
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
INTTK int
IDENFR printStudentId
LPARENT (
INTTK int
IDENFR year
COMMA ,
INTTK int
IDENFR college
COMMA ,
INTTK int
IDENFR iter
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d%d%d\n"
COMMA ,
IDENFR year
COMMA ,
IDENFR college
COMMA ,
IDENFR iter
RPARENT )
SEMICN ;
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR n
COMMA ,
IDENFR i
SEMICN ;
INTTK int
IDENFR result
SEMICN ;
INTTK int
IDENFR c
LBRACK [
INTCON 41
RBRACK ]
SEMICN ;
INTTK int
IDENFR d
LBRACK [
INTCON 41
RBRACK ]
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 41
RPARENT )
LBRACE {
IDENFR d
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR n
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR result
ASSIGN =
IDENFR f
LPARENT (
IDENFR d
COMMA ,
IDENFR n
RPARENT )
SEMICN ;
IDENFR printStudentId
LPARENT (
IDENFR globalA
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR globalA
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR globalVb
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "result is %d\n"
COMMA ,
IDENFR result
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 8
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "front %d is %d\n"
COMMA ,
IDENFR i
PLUS +
INTCON 1
COMMA ,
IDENFR d
LBRACK [
IDENFR n
MINU -
IDENFR i
MINU -
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
