VOIDTK void
IDENFR swap
LPARENT (
INTTK int
IDENFR i
COMMA ,
INTTK int
IDENFR j
COMMA ,
INTTK int
IDENFR a
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR v1
COMMA ,
IDENFR v2
SEMICN ;
IDENFR v1
ASSIGN =
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
IDENFR v2
ASSIGN =
IDENFR a
LBRACK [
IDENFR j
RBRACK ]
SEMICN ;
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
IDENFR v2
SEMICN ;
IDENFR a
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR v1
SEMICN ;
RBRACE }
VOIDTK void
IDENFR addArr
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR b
LBRACK [
RBRACK ]
LBRACK [
INTCON 10
RBRACK ]
COMMA ,
INTTK int
IDENFR n
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR n
GEQ >=
INTCON 0
RPARENT )
LBRACE {
IDENFR a
LBRACK [
IDENFR n
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
IDENFR n
RBRACK ]
PLUS +
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
IDENFR n
RBRACK ]
SEMICN ;
IDENFR n
ASSIGN =
IDENFR n
MINU -
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
VOIDTK void
IDENFR printArr
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR n
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR n
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d "
COMMA ,
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR tab1
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
INTTK int
IDENFR tab2
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
INTTK int
IDENFR tab3
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
LBRACE {
INTCON 5
COMMA ,
INTCON 4
COMMA ,
INTCON 3
COMMA ,
INTCON 2
COMMA ,
INTCON 1
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373846\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "tab3\n"
RPARENT )
SEMICN ;
IDENFR printArr
LPARENT (
IDENFR tab3
COMMA ,
INTCON 5
RPARENT )
SEMICN ;
IDENFR swap
LPARENT (
INTCON 0
COMMA ,
INTCON 4
COMMA ,
IDENFR tab3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "swaped tab3\n"
RPARENT )
SEMICN ;
IDENFR printArr
LPARENT (
IDENFR tab3
COMMA ,
INTCON 5
RPARENT )
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 10
RPARENT )
LBRACE {
IDENFR tab1
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
IDENFR tab3
LBRACK [
IDENFR i
MOD %
INTCON 5
RBRACK ]
MULT *
INTCON 3
SEMICN ;
IDENFR tab2
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
IDENFR tab3
LBRACK [
IDENFR i
MOD %
INTCON 5
RBRACK ]
MULT *
INTCON 7
SEMICN ;
IDENFR tab2
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
IDENFR tab3
LBRACK [
IDENFR i
MOD %
INTCON 5
RBRACK ]
MULT *
INTCON 11
MINU -
INTCON 12
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "tab1\n"
RPARENT )
SEMICN ;
IDENFR printArr
LPARENT (
IDENFR tab1
COMMA ,
INTCON 10
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "tab2[0]\n"
RPARENT )
SEMICN ;
IDENFR printArr
LPARENT (
IDENFR tab2
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
INTCON 10
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "tab2[1]\n"
RPARENT )
SEMICN ;
IDENFR printArr
LPARENT (
IDENFR tab2
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
INTCON 10
RPARENT )
SEMICN ;
IDENFR addArr
LPARENT (
IDENFR tab1
COMMA ,
IDENFR tab2
COMMA ,
INTCON 9
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "added tab1\n"
RPARENT )
SEMICN ;
IDENFR printArr
LPARENT (
IDENFR tab1
COMMA ,
INTCON 10
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
