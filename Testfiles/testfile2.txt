const int a_1[5] = {1, 2, 3, 4, 5};
int a_2[2][5] = {{1, 1, 3, 1, 2},
                 {2, 2, 5, 3, 4}};
int a_3[2][2] = {{1, 1},
                 {2, 2}};

void get_array(int a[], int size) {
    int i = 0, temp;
    while (i < size) {
        temp = getint();
        a[i] = temp;
        i = i + 1;
    }
    return;
}

void bubble_sort(int a[], int size) {
    int i = 0, j, temp;
    while (i < size - 1) {
        j = 0;
        while (j < size - i - 1) {
            if (a[j] > a[j + 1]) {
                temp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = temp;
            }
            j = j + 1;
        }
        i = i + 1;
    }
    return;
}

void output(int a[], int size) {
    int i = 0;
    while (i < size) {
        printf("%d", a[i]);
        i = i + 1;
    }
    printf("\nFinish outputting an array\n");
    return;
}

int getSecSum(int a[][5]) {
    int i = 0, sum = 0;
    while (i < 5) {
        sum = sum + a[1][i];
        i = i + 1;
    }
    return sum;
}

int getSecMul(int a[][5]) {
    int i = 0, sum = 1;
    while (i < 5) {
        sum = sum * a[1][i];
        i = i + 1;
    }
    return sum;
}

int main() {
    {}
    int i = 0;
    while (i < 5) {
        printf("20373980\n");
        i = i + 1;
    }
    int array[10];
    get_array(array, 10);
    bubble_sort(array, 10);
    output(array, 10);
    if (getSecSum(a_2)) {
        printf("Get Sec Sum\n");
    }
    printf("Get Sec Mul %d\n", getSecMul(a_2));
    printf("Finished\n");
    return 0;
}