CONSTTK const
INTTK int
IDENFR my
ASSIGN =
INTCON 20373778
COMMA ,
IDENFR ra
ASSIGN =
INTCON 123456
SEMICN ;
VOIDTK void
IDENFR test1
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR my
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
IDENFR test2
LPARENT (
INTTK int
IDENFR x
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
PLUS +
IDENFR my
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR test1
LPARENT (
RPARENT )
SEMICN ;
IDENFR test2
LPARENT (
IDENFR ra
RPARENT )
SEMICN ;
INTTK int
IDENFR x
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
INTCON 0
EQL ==
INTCON 1
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 3
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
LEQ <=
INTCON 1
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
LEQ <=
INTCON 0
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 3
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
GEQ >=
INTCON 1
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
GEQ >=
INTCON 0
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 3
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
NEQ !=
INTCON 1
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
NEQ !=
INTCON 0
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 3
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
LSS <
INTCON 1
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
LSS <
INTCON 0
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 3
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
GRE >
INTCON 1
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
GRE >
INTCON 0
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 3
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
INTCON 5
MOD %
INTCON 3
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
LBRACE {
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "end\n"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
