CONSTTK const
INTTK int
IDENFR _
ASSIGN =
INTCON 20373117
PLUS +
MINU -
PLUS +
MINU -
INTCON 1
MULT *
INTCON 1
DIV /
INTCON 1
MINU -
PLUS +
INTCON 1
MOD %
INTCON 2
SEMICN ;
CONSTTK const
INTTK int
IDENFR value1
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR value10
ASSIGN =
INTCON 10
SEMICN ;
INTTK int
IDENFR value11
ASSIGN =
INTCON 11
COMMA ,
IDENFR value12
ASSIGN =
INTCON 12
COMMA ,
IDENFR value13
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR value13
ASSIGN =
INTCON 13
SEMICN ;
INTTK int
IDENFR value14
ASSIGN =
INTCON 14
COMMA ,
IDENFR value15
ASSIGN =
INTCON 15
COMMA ,
IDENFR value16
SEMICN ;
INTTK int
IDENFR value17
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR _
RPARENT )
SEMICN ;
INTTK int
IDENFR n
ASSIGN =
INTCON 3
SEMICN ;
WHILETK while
LPARENT (
IDENFR n
GRE >
INTCON 0
RPARENT )
LBRACE {
IDENFR n
ASSIGN =
MINU -
INTCON 1
PLUS +
IDENFR n
SEMICN ;
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 2
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR value14
MINU -
IDENFR value11
EQL ==
INTCON 3
RPARENT )
LBRACE {
CONTINUETK continue
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "continue is wrong\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "if is wrong\n"
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR value15
MINU -
IDENFR value12
NEQ !=
INTCON 3
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "if is wrong\n"
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
CONTINUETK continue
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "continue is wrong\n"
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
INTCON 20373117
PLUS +
MINU -
PLUS +
MINU -
INTCON 1
MULT *
INTCON 1
DIV /
INTCON 1
MINU -
PLUS +
INTCON 1
MOD %
INTCON 2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
INTCON 20373117
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "\n\n\n\n\n\n"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
