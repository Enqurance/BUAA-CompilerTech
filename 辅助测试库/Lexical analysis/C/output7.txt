CONSTTK const
INTTK int
IDENFR PI
ASSIGN =
INTCON 3
SEMICN ;
INTTK int
IDENFR temp
ASSIGN =
INTCON 100
SEMICN ;
INTTK int
IDENFR add
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
PLUS +
IDENFR b
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 9
SEMICN ;
CONSTTK const
INTTK int
IDENFR b
ASSIGN =
INTCON 11
SEMICN ;
INTTK int
IDENFR c
ASSIGN =
INTCON 0
COMMA ,
IDENFR now
ASSIGN =
INTCON 10
SEMICN ;
WHILETK while
LPARENT (
IDENFR now
GRE >
INTCON 0
RPARENT )
LBRACE {
IDENFR now
ASSIGN =
IDENFR now
MINU -
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373053\n"
RPARENT )
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR c
LSS <
INTCON 10000
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR c
LSS <
INTCON 50
RPARENT )
LBRACE {
IDENFR c
ASSIGN =
IDENFR add
LPARENT (
IDENFR c
COMMA ,
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR c
ASSIGN =
IDENFR add
LPARENT (
IDENFR c
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d"
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
