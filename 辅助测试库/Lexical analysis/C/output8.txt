CONSTTK const
INTTK int
IDENFR N
ASSIGN =
INTCON 555
SEMICN ;
INTTK int
IDENFR func
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 114500
SEMICN ;
INTTK int
IDENFR b
ASSIGN =
INTCON 10
SEMICN ;
RETURNTK return
IDENFR a
PLUS +
IDENFR b
MINU -
INTCON 4
PLUS +
INTCON 8
SEMICN ;
RBRACE }
INTTK int
IDENFR func2
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
MULT *
IDENFR b
PLUS +
IDENFR c
SEMICN ;
RBRACE }
VOIDTK void
IDENFR printTotal
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
LPARENT (
IDENFR a
PLUS +
IDENFR b
PLUS +
IDENFR c
RPARENT )
MULT *
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR N
ASSIGN =
INTCON 666
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373057\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR func
LPARENT (
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR func2
LPARENT (
PLUS +
INTCON 1
COMMA ,
PLUS +
INTCON 2
COMMA ,
PLUS +
INTCON 3
RPARENT )
RPARENT )
SEMICN ;
IDENFR printTotal
LPARENT (
PLUS +
INTCON 5
COMMA ,
MINU -
INTCON 2
COMMA ,
MINU -
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d"
COMMA ,
IDENFR N
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
