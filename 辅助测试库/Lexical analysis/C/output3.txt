CONSTTK const
INTTK int
IDENFR n
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 1
COMMA ,
IDENFR b
ASSIGN =
INTCON 2
SEMICN ;
CONSTTK const
INTTK int
IDENFR c
ASSIGN =
INTCON 3
COMMA ,
IDENFR d
ASSIGN =
INTCON 4
COMMA ,
IDENFR e
ASSIGN =
INTCON 5
SEMICN ;
INTTK int
IDENFR fib
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
INTTK int
IDENFR ret
ASSIGN =
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 1
RPARENT )
LBRACE {
IDENFR ret
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 2
RPARENT )
LBRACE {
IDENFR ret
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR ret
ASSIGN =
IDENFR fib
LPARENT (
IDENFR n
MINU -
INTCON 1
RPARENT )
PLUS +
IDENFR fib
LPARENT (
IDENFR n
MINU -
INTCON 2
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
IDENFR ret
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR n
SEMICN ;
IDENFR n
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "19374223\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fibo[%d] = %d\n"
COMMA ,
IDENFR n
COMMA ,
IDENFR fib
LPARENT (
IDENFR n
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fibo[%d] / 2 = %d\n"
COMMA ,
IDENFR n
COMMA ,
IDENFR fib
LPARENT (
IDENFR n
RPARENT )
DIV /
INTCON 2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ""
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ""
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ""
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ""
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ""
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ""
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "/***************** END *****************/\n"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
