VOIDTK void
IDENFR condTest
LPARENT (
RPARENT )
LBRACE {
IFTK if
LPARENT (
INTCON 0
EQL ==
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "20"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
NEQ !=
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "37"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
LSS <
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "3"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 1
GRE >
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "9"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 0
LEQ <=
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "4"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
INTCON 1
GEQ >=
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "4"
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR addTest
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR t0
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR t1
ASSIGN =
INTCON 1
PLUS +
INTCON 1
SEMICN ;
INTTK int
IDENFR t2
ASSIGN =
INTCON 1
MINU -
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d %d %d\n"
COMMA ,
IDENFR t0
COMMA ,
IDENFR t1
COMMA ,
IDENFR t2
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR mulTest
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR t0
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR t1
ASSIGN =
INTCON 1
MULT *
INTCON 2
SEMICN ;
INTTK int
IDENFR t2
ASSIGN =
INTCON 3
DIV /
INTCON 1
SEMICN ;
INTTK int
IDENFR t3
ASSIGN =
INTCON 3
MOD %
INTCON 4
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d %d %d %d\n"
COMMA ,
IDENFR t0
COMMA ,
IDENFR t1
COMMA ,
IDENFR t2
COMMA ,
IDENFR t3
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR f
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
SEMICN ;
RBRACE }
VOIDTK void
IDENFR unaryTest
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR t0
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR t1
SEMICN ;
IDENFR t1
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
INTTK int
IDENFR t2
ASSIGN =
IDENFR f
LPARENT (
INTCON 1
RPARENT )
SEMICN ;
INTTK int
IDENFR t3
ASSIGN =
MINU -
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d %d %d %d\n"
COMMA ,
IDENFR t0
COMMA ,
IDENFR t1
COMMA ,
IDENFR t2
COMMA ,
IDENFR t3
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR primaryTest
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR t0
ASSIGN =
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
INTTK int
IDENFR t1
ASSIGN =
IDENFR t0
SEMICN ;
INTTK int
IDENFR t2
ASSIGN =
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d %d %d\n"
COMMA ,
IDENFR t0
COMMA ,
IDENFR t1
COMMA ,
IDENFR t2
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR unaryOpTest
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR t0
ASSIGN =
PLUS +
INTCON 0
SEMICN ;
INTTK int
IDENFR t1
ASSIGN =
MINU -
INTCON 1
SEMICN ;
IFTK if
LPARENT (
NOT !
IDENFR t0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON "%d %d\n"
COMMA ,
IDENFR t0
COMMA ,
IDENFR t1
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR condTest
LPARENT (
RPARENT )
SEMICN ;
IDENFR addTest
LPARENT (
RPARENT )
SEMICN ;
IDENFR mulTest
LPARENT (
RPARENT )
SEMICN ;
IDENFR unaryTest
LPARENT (
RPARENT )
SEMICN ;
IDENFR primaryTest
LPARENT (
RPARENT )
SEMICN ;
IDENFR unaryOpTest
LPARENT (
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
