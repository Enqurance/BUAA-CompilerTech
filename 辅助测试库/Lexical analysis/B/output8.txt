CONSTTK const
INTTK int
IDENFR g_con_a
LBRACK [
LPARENT (
INTCON 1
PLUS +
INTCON 1
RPARENT )
MULT *
INTCON 8
DIV /
LPARENT (
INTCON 3
PLUS +
INTCON 1
RPARENT )
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
COMMA ,
INTCON 4
RBRACE }
SEMICN ;
CONSTTK const
INTTK int
IDENFR g_con_b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 4
RBRACE }
COMMA ,
LBRACE {
INTCON 2
COMMA ,
INTCON 4
RBRACE }
RBRACE }
COMMA ,
IDENFR g_con_c
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
SEMICN ;
CONSTTK const
INTTK int
IDENFR N
ASSIGN =
INTCON 2
SEMICN ;
INTTK int
IDENFR g_a
LBRACK [
INTCON 4
RBRACK ]
SEMICN ;
INTTK int
IDENFR g_b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 5
COMMA ,
INTCON 9
RBRACE }
COMMA ,
LBRACE {
INTCON 10
COMMA ,
INTCON 2
RBRACE }
RBRACE }
COMMA ,
IDENFR g_c
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
INTTK int
IDENFR getArraySum
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR len
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR sum
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR sum
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR len
RPARENT )
LBRACE {
IDENFR sum
ASSIGN =
IDENFR sum
PLUS +
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
IDENFR sum
SEMICN ;
RBRACE }
INTTK int
IDENFR getTwoDimArraySum
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
INTTK int
IDENFR row
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR sum
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
IDENFR sum
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR row
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR j
LSS <
INTCON 2
RPARENT )
LBRACE {
IDENFR sum
ASSIGN =
IDENFR sum
PLUS +
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
IDENFR sum
SEMICN ;
RBRACE }
INTTK int
IDENFR get_g_con_b_sum
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20374042\n"
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR con_a
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
IDENFR g_con_a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
INTCON 4
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
INTCON 19
RBRACE }
SEMICN ;
CONSTTK const
INTTK int
IDENFR con_b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 9
RBRACE }
COMMA ,
LBRACE {
INTCON 3
COMMA ,
INTCON 8
RBRACE }
RBRACE }
COMMA ,
IDENFR con_c
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
SEMICN ;
INTTK int
IDENFR a
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
IDENFR g_con_a
LBRACK [
INTCON 3
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 3
RBRACK ]
PLUS +
IDENFR g_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR N
PLUS +
INTCON 4
COMMA ,
IDENFR con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RBRACE }
SEMICN ;
INTTK int
IDENFR b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 1
PLUS +
INTCON 3
MOD %
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 4
COMMA ,
INTCON 8
RBRACE }
COMMA ,
LBRACE {
MINU -
INTCON 2
COMMA ,
INTCON 249
RBRACE }
RBRACE }
COMMA ,
IDENFR c
LBRACK [
LPARENT (
IDENFR N
PLUS +
INTCON 1
RPARENT )
MULT *
INTCON 2
MOD %
INTCON 4
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR N
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_a: %d %d %d %d\n"
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_b: %d %d %d %d\n"
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_c: %d %d\n"
COMMA ,
IDENFR g_con_c
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_c
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_a: %d %d %d %d\n"
COMMA ,
IDENFR g_a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_a
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR g_a
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_b: %d %d %d %d\n"
COMMA ,
IDENFR g_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_c: %d %d\n"
COMMA ,
IDENFR g_c
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_c
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "con_a: %d %d %d %d\n"
COMMA ,
IDENFR con_a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR con_a
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR con_a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR con_a
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "con_b: %d %d %d %d\n"
COMMA ,
IDENFR con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "con_c: %d %d\n"
COMMA ,
IDENFR con_c
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR con_c
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "a: %d %d %d %d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR a
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR a
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "b: %d %d %d %d\n"
COMMA ,
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "c: %d %d\n"
COMMA ,
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR g_con_a
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
IDENFR N
COMMA ,
IDENFR N
PLUS +
INTCON 2
COMMA ,
IDENFR con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_a: %d %d %d %d\n"
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
INTTK int
IDENFR g_a
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
IDENFR g_c
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_con_a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
INTCON 239
COMMA ,
IDENFR N
MINU -
INTCON 284
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_a: %d %d %d %d\n"
COMMA ,
IDENFR g_a
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_a
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_a
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
IDENFR g_a
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR g_b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 9
RBRACE }
COMMA ,
LBRACE {
MINU -
INTCON 139
COMMA ,
INTCON 24
RBRACE }
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_b: %d %d %d %d\n"
COMMA ,
IDENFR g_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
INTTK int
IDENFR g_con_b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
IDENFR N
RBRACK ]
SEMICN ;
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
MINU -
INTCON 1823
SEMICN ;
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR a
LBRACK [
INTCON 3
RBRACK ]
PLUS +
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
INTCON 29424
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_b: %d %d %d %d\n"
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
INTTK int
IDENFR g_c
ASSIGN =
INTCON 19
SEMICN ;
IDENFR g_c
ASSIGN =
IDENFR g_c
MULT *
LPARENT (
IDENFR g_con_b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR g_b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_c: %d\n"
COMMA ,
IDENFR g_c
RPARENT )
SEMICN ;
INTTK int
IDENFR sum
SEMICN ;
IDENFR sum
ASSIGN =
IDENFR getArraySum
LPARENT (
IDENFR g_a
COMMA ,
INTCON 4
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_a sum: %d\n"
COMMA ,
IDENFR sum
RPARENT )
SEMICN ;
IDENFR sum
ASSIGN =
IDENFR getArraySum
LPARENT (
IDENFR g_con_b
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
INTCON 2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_b[1] sum: %d\n"
COMMA ,
IDENFR sum
RPARENT )
SEMICN ;
IDENFR sum
ASSIGN =
IDENFR getTwoDimArraySum
LPARENT (
IDENFR g_con_b
COMMA ,
INTCON 2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "g_con_b sum: %d\n"
COMMA ,
IDENFR sum
RPARENT )
SEMICN ;
IDENFR sum
ASSIGN =
IDENFR get_g_con_b_sum
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "real global const b sum: %d\n"
COMMA ,
IDENFR sum
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
