CONSTTK const
INTTK int
IDENFR wzy
LBRACK [
INTCON 8
RBRACK ]
ASSIGN =
LBRACE {
INTCON 2
COMMA ,
INTCON 0
COMMA ,
INTCON 3
COMMA ,
INTCON 7
COMMA ,
INTCON 3
COMMA ,
INTCON 3
COMMA ,
INTCON 5
COMMA ,
INTCON 4
RBRACE }
SEMICN ;
INTTK int
IDENFR id
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 6
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 2
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 6
COMMA ,
INTCON 1
COMMA ,
INTCON 3
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR zeroArray
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
SEMICN ;
CONSTTK const
INTTK int
IDENFR useless
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
RBRACE }
SEMICN ;
VOIDTK void
IDENFR Permutation
LPARENT (
INTTK int
IDENFR m
COMMA ,
INTTK int
IDENFR n
COMMA ,
INTTK int
IDENFR arr
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR temp
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
IDENFR m
GEQ >=
IDENFR n
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR n
MINU -
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d "
COMMA ,
IDENFR arr
LBRACK [
IDENFR i
RBRACK ]
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR arr
LBRACK [
IDENFR i
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR n
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR temp
LBRACK [
IDENFR i
RBRACK ]
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR temp
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
INTCON 1
SEMICN ;
IDENFR arr
LBRACK [
IDENFR m
RBRACK ]
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IDENFR Permutation
LPARENT (
IDENFR m
PLUS +
INTCON 1
COMMA ,
IDENFR n
COMMA ,
IDENFR arr
COMMA ,
IDENFR temp
RPARENT )
SEMICN ;
IDENFR temp
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
INTCON 0
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR arr
LBRACK [
INTCON 15
RBRACK ]
COMMA ,
IDENFR temp
LBRACK [
INTCON 15
RBRACK ]
COMMA ,
IDENFR n
SEMICN ;
IDENFR n
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373354\n"
RPARENT )
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
IDENFR zeroArray
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR i
ASSIGN =
IDENFR useless
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR n
RPARENT )
LBRACE {
IDENFR temp
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR Permutation
LPARENT (
INTCON 0
COMMA ,
IDENFR n
COMMA ,
IDENFR arr
COMMA ,
IDENFR temp
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
