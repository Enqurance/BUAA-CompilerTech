CONSTTK const
INTTK int
IDENFR fk
ASSIGN =
INTCON 1919810
SEMICN ;
CONSTTK const
INTTK int
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 4
COMMA ,
INTCON 3
RBRACE }
RBRACE }
COMMA ,
IDENFR asd
ASSIGN =
INTCON 10
SEMICN ;
CONSTTK const
INTTK int
IDENFR d
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
IDENFR c11
ASSIGN =
MINU -
INTCON 114
COMMA ,
IDENFR c
ASSIGN =
PLUS +
INTCON 9
SEMICN ;
INTTK int
IDENFR aa
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 1
PLUS +
INTCON 1
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
RBRACE }
COMMA ,
IDENFR b
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 9
COMMA ,
INTCON 8
COMMA ,
INTCON 7
RBRACE }
SEMICN ;
INTTK int
IDENFR x
ASSIGN =
MINU -
INTCON 3
COMMA ,
IDENFR y
ASSIGN =
INTCON 2
COMMA ,
IDENFR z
ASSIGN =
INTCON 514
SEMICN ;
VOIDTK void
IDENFR pt
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR work
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR test
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
LBRACK [
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
COMMA ,
INTTK int
IDENFR d
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
PLUS +
IDENFR b
PLUS +
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR d
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
RBRACE }
INTTK int
IDENFR fun
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
IDENFR fxxk
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
RPARENT )
LBRACE {
RETURNTK return
IDENFR x
PLUS +
IDENFR y
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "20373286\n"
RPARENT )
SEMICN ;
IDENFR pt
LPARENT (
RPARENT )
SEMICN ;
IDENFR x
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
PLUS +
IDENFR y
PLUS +
IDENFR z
PLUS +
IDENFR c11
RPARENT )
SEMICN ;
LBRACE {
INTTK int
IDENFR x
SEMICN ;
IDENFR x
ASSIGN =
IDENFR asd
MULT *
IDENFR asd
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR x
DIV /
IDENFR asd
RPARENT )
SEMICN ;
IDENFR b
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR x
SEMICN ;
IDENFR work
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR f
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
NOT !
IDENFR f
RPARENT )
LBRACE {
INTTK int
IDENFR p
ASSIGN =
PLUS +
MINU -
PLUS +
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
LBRACE {
INTTK int
IDENFR p
ASSIGN =
INTCON 2
SEMICN ;
IDENFR aa
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR test
LPARENT (
IDENFR b
COMMA ,
IDENFR x
COMMA ,
IDENFR aa
COMMA ,
IDENFR aa
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
MOD %
IDENFR p
RPARENT )
SEMICN ;
RBRACE }
LBRACE {
INTTK int
IDENFR p
ASSIGN =
INTCON 3
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
LPARENT (
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
MINU -
IDENFR p
RPARENT )
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
INTTK int
IDENFR f1
ASSIGN =
IDENFR fxxk
LPARENT (
IDENFR f
COMMA ,
INTCON 2
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR f
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "111\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "ajkshbfjhysaefrbh\n"
RPARENT )
SEMICN ;
INTTK int
IDENFR g
ASSIGN =
IDENFR fun
LPARENT (
RPARENT )
PLUS +
IDENFR test
LPARENT (
IDENFR b
COMMA ,
IDENFR f1
COMMA ,
IDENFR aa
COMMA ,
IDENFR aa
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "+%d-*\n"
COMMA ,
IDENFR g
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d %d %d\n"
COMMA ,
IDENFR c11
COMMA ,
IDENFR z
COMMA ,
IDENFR fk
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
